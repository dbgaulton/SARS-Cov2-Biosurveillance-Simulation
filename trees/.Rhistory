#Keep Isolation Data
IsolateData = PseudomonasData[,c('IsolationSite')]
#Keep Cystic Fibrosis Data
CFData = PseudomonasData[,c('CysticFibrosis')]
#remove Unwanted columns from the dataframe
PseudomonasData = subset(PseudomonasData,select=c('Mucoidy', 'Metallic', 'Hemolysis', 'Pigment', 'Amikacin', 'Cefepime', 'Ciprofloxacin', 'Gentamicin', 'Piperacillin/Tazobactam', 'Tobramycin', 'Meropenem'))
PseudomonasData = data.frame(PseudomonasData, stringsAsFactors = FALSE)
#create gower distance matrix
gower = gower.dist(PseudomonasData)
#perform PcoA using the ape package
x = pcoa(gower)
#plot PcoA
biplot(x, plot.axes = c(1,2), dir.axis1=1, dir.axis2=1)
library(readr)
library(StatMatch)
library(ape)
PseudomonasData = read_csv("Desktop/Papin Rotation/PseudomonasData.csv")
#remove rows that have an isolation site that is not lung/trachea,
#urine/catheter, skin/wound
PseudomonasData = subset(PseudomonasData, IsolationSite!='Other')
PseudomonasData = subset(PseudomonasData, IsolationSite!='ENT/Sinus')
PseudomonasData = subset(PseudomonasData, IsolationSite!='Blood')
#Keep Isolation Data
IsolateData = PseudomonasData[,c('IsolationSite')]
#Keep Cystic Fibrosis Data
CFData = PseudomonasData[,c('CysticFibrosis')]
#remove Unwanted columns from the dataframe
PseudomonasData = subset(PseudomonasData,select=c('Mucoidy', 'Metallic', 'Hemolysis', 'Pigment', 'Amikacin', 'Cefepime', 'Ciprofloxacin', 'Gentamicin', 'Piperacillin/Tazobactam', 'Tobramycin', 'Meropenem'))
PseudomonasData = data.frame(PseudomonasData, stringsAsFactors = FALSE)
#create gower distance matrix
gower = gower.dist(PseudomonasData)
#perform PcoA using the ape package
x = pcoa(gower)
#plot PcoA
biplot(x, plot.axes = c(1,2), dir.axis1=-1, dir.axis2=-1)
library(readr)
library(StatMatch)
library(ape)
PseudomonasData = read_csv("Desktop/Papin Rotation/PseudomonasData.csv")
#remove rows that have an isolation site that is not lung/trachea,
#urine/catheter, skin/wound
PseudomonasData = subset(PseudomonasData, IsolationSite!='Other')
PseudomonasData = subset(PseudomonasData, IsolationSite!='ENT/Sinus')
PseudomonasData = subset(PseudomonasData, IsolationSite!='Blood')
#Keep Isolation Data
IsolateData = PseudomonasData[,c('IsolationSite')]
#Keep Cystic Fibrosis Data
CFData = PseudomonasData[,c('CysticFibrosis')]
#remove Unwanted columns from the dataframe
PseudomonasData = subset(PseudomonasData,select=c('Mucoidy', 'Metallic', 'Hemolysis', 'Pigment', 'Amikacin', 'Cefepime', 'Ciprofloxacin', 'Gentamicin', 'Piperacillin/Tazobactam', 'Tobramycin', 'Meropenem'))
PseudomonasData = data.frame(PseudomonasData, stringsAsFactors = FALSE)
#create gower distance matrix
gower = gower.dist(PseudomonasData)
#perform PcoA using the ape package
x = pcoa(gower)
#plot PcoA
biplot(x, plot.axes = c(1,2), dir.axis1=1, dir.axis2=-1)
library(readr)
library(StatMatch)
library(ape)
PseudomonasData = read_csv("Desktop/Papin Rotation/PseudomonasData.csv")
#remove rows that have an isolation site that is not lung/trachea,
#urine/catheter, skin/wound
PseudomonasData = subset(PseudomonasData, IsolationSite!='Other')
PseudomonasData = subset(PseudomonasData, IsolationSite!='ENT/Sinus')
PseudomonasData = subset(PseudomonasData, IsolationSite!='Blood')
#Keep Isolation Data
IsolateData = PseudomonasData[,c('IsolationSite')]
#Keep Cystic Fibrosis Data
CFData = PseudomonasData[,c('CysticFibrosis')]
#remove Unwanted columns from the dataframe
PseudomonasData = subset(PseudomonasData,select=c('Mucoidy', 'Metallic', 'Hemolysis', 'Pigment', 'Amikacin', 'Cefepime', 'Ciprofloxacin', 'Gentamicin', 'Piperacillin/Tazobactam', 'Tobramycin', 'Meropenem'))
PseudomonasData = data.frame(PseudomonasData, stringsAsFactors = FALSE)
#create gower distance matrix
gower = gower.dist(PseudomonasData)
#perform PcoA using the ape package
x = pcoa(gower)
#plot PcoA
biplot(x, plot.axes = c(1,2), dir.axis1=1, dir.axis2=1)
x(eigenvalues)
x.eigenvalues
x.values
x[values]
Eigenvalues
library(readr)
library(StatMatch)
library(ape)
PseudomonasData = read_csv("Desktop/Papin Rotation/PseudomonasData.csv")
#remove rows that have an isolation site that is not lung/trachea,
#urine/catheter, skin/wound
PseudomonasData = subset(PseudomonasData, IsolationSite!='Other')
PseudomonasData = subset(PseudomonasData, IsolationSite!='ENT/Sinus')
PseudomonasData = subset(PseudomonasData, IsolationSite!='Blood')
#Keep Isolation Data
IsolateData = PseudomonasData[,c('IsolationSite')]
#Keep Cystic Fibrosis Data
CFData = PseudomonasData[,c('CysticFibrosis')]
#remove Unwanted columns from the dataframe
PseudomonasData = subset(PseudomonasData,select=c('Mucoidy', 'Metallic', 'Hemolysis', 'Pigment', 'Amikacin', 'Cefepime', 'Ciprofloxacin', 'Gentamicin', 'Piperacillin/Tazobactam', 'Tobramycin', 'Meropenem'))
PseudomonasData = data.frame(PseudomonasData, stringsAsFactors = FALSE)
#create gower distance matrix
gower = gower.dist(PseudomonasData)
#perform PcoA using the ape package
x = pcoa.Eigenvalues(gower)
#plot PcoA
biplot(x, plot.axes = c(1,2), dir.axis1=1, dir.axis2=1)
library(readr)
library(StatMatch)
library(ape)
PseudomonasData = read_csv("Desktop/Papin Rotation/PseudomonasData.csv")
#remove rows that have an isolation site that is not lung/trachea,
#urine/catheter, skin/wound
PseudomonasData = subset(PseudomonasData, IsolationSite!='Other')
PseudomonasData = subset(PseudomonasData, IsolationSite!='ENT/Sinus')
PseudomonasData = subset(PseudomonasData, IsolationSite!='Blood')
#Keep Isolation Data
IsolateData = PseudomonasData[,c('IsolationSite')]
#Keep Cystic Fibrosis Data
CFData = PseudomonasData[,c('CysticFibrosis')]
#remove Unwanted columns from the dataframe
PseudomonasData = subset(PseudomonasData,select=c('Mucoidy', 'Metallic', 'Hemolysis', 'Pigment', 'Amikacin', 'Cefepime', 'Ciprofloxacin', 'Gentamicin', 'Piperacillin/Tazobactam', 'Tobramycin', 'Meropenem'))
PseudomonasData = data.frame(PseudomonasData, stringsAsFactors = FALSE)
#create gower distance matrix
gower = gower.dist(PseudomonasData)
#perform PcoA using the ape package
x = pcoa(gower)
#plot PcoA
biplot(x, plot.axes = c(1,2), dir.axis1=1, dir.axis2=1)
library(readr)
library(StatMatch)
library(ape)
PseudomonasData = read_csv("Desktop/Papin Rotation/PseudomonasData.csv")
#remove rows that have an isolation site that is not lung/trachea,
#urine/catheter, skin/wound
PseudomonasData = subset(PseudomonasData, IsolationSite!='Other')
PseudomonasData = subset(PseudomonasData, IsolationSite!='ENT/Sinus')
PseudomonasData = subset(PseudomonasData, IsolationSite!='Blood')
#Keep Isolation Data
IsolateData = PseudomonasData[,c('IsolationSite')]
#Keep Cystic Fibrosis Data
CFData = PseudomonasData[,c('CysticFibrosis')]
#remove Unwanted columns from the dataframe
PseudomonasData = subset(PseudomonasData,select=c('Mucoidy', 'Metallic', 'Hemolysis', 'Pigment', 'Amikacin', 'Cefepime', 'Ciprofloxacin', 'Gentamicin', 'Piperacillin/Tazobactam', 'Tobramycin', 'Meropenem'))
PseudomonasData = data.frame(PseudomonasData, stringsAsFactors = FALSE)
#create gower distance matrix
gower = gower.dist(PseudomonasData)
#perform PcoA using the ape package
x = pcoa(gower)
#plot PcoA
biplot(x, plot.axes = c(1,2), dir.axis1=1, dir.axis2=1, xlim = 0.8, ylim = 0.6)
library(readr)
library(StatMatch)
library(ape)
PseudomonasData = read_csv("Desktop/Papin Rotation/PseudomonasData.csv")
#remove rows that have an isolation site that is not lung/trachea,
#urine/catheter, skin/wound
PseudomonasData = subset(PseudomonasData, IsolationSite!='Other')
PseudomonasData = subset(PseudomonasData, IsolationSite!='ENT/Sinus')
PseudomonasData = subset(PseudomonasData, IsolationSite!='Blood')
#Keep Isolation Data
IsolateData = PseudomonasData[,c('IsolationSite')]
#Keep Cystic Fibrosis Data
CFData = PseudomonasData[,c('CysticFibrosis')]
#remove Unwanted columns from the dataframe
PseudomonasData = subset(PseudomonasData,select=c('Mucoidy', 'Metallic', 'Hemolysis', 'Pigment', 'Amikacin', 'Cefepime', 'Ciprofloxacin', 'Gentamicin', 'Piperacillin/Tazobactam', 'Tobramycin', 'Meropenem'))
PseudomonasData = data.frame(PseudomonasData, stringsAsFactors = FALSE)
#create gower distance matrix
gower = gower.dist(PseudomonasData)
#perform PcoA using the ape package
x = pcoa(gower)
#plot PcoA
biplot(x, plot.axes = c(1,2), dir.axis1=1, dir.axis2=1, xlim(0.8), ylim(0.6))
library(readr)
library(StatMatch)
library(ape)
PseudomonasData = read_csv("Desktop/Papin Rotation/PseudomonasData.csv")
#remove rows that have an isolation site that is not lung/trachea,
#urine/catheter, skin/wound
PseudomonasData = subset(PseudomonasData, IsolationSite!='Other')
PseudomonasData = subset(PseudomonasData, IsolationSite!='ENT/Sinus')
PseudomonasData = subset(PseudomonasData, IsolationSite!='Blood')
#Keep Isolation Data
IsolateData = PseudomonasData[,c('IsolationSite')]
#Keep Cystic Fibrosis Data
CFData = PseudomonasData[,c('CysticFibrosis')]
#remove Unwanted columns from the dataframe
PseudomonasData = subset(PseudomonasData,select=c('Mucoidy', 'Metallic', 'Hemolysis', 'Pigment', 'Amikacin', 'Cefepime', 'Ciprofloxacin', 'Gentamicin', 'Piperacillin/Tazobactam', 'Tobramycin', 'Meropenem'))
PseudomonasData = data.frame(PseudomonasData, stringsAsFactors = FALSE)
#create gower distance matrix
gower = gower.dist(PseudomonasData)
#perform PcoA using the ape package
x = pcoa(gower)
#plot PcoA
biplot(x, plot.axes = c(1,2), dir.axis1=1, dir.axis2=1, xlim(-0.25,0.8), ylim(-0.3, 0.6))
library(readr)
library(StatMatch)
library(ape)
PseudomonasData = read_csv("Desktop/Papin Rotation/PseudomonasData.csv")
#remove rows that have an isolation site that is not lung/trachea,
#urine/catheter, skin/wound
PseudomonasData = subset(PseudomonasData, IsolationSite!='Other')
PseudomonasData = subset(PseudomonasData, IsolationSite!='ENT/Sinus')
PseudomonasData = subset(PseudomonasData, IsolationSite!='Blood')
#Keep Isolation Data
IsolateData = PseudomonasData[,c('IsolationSite')]
#Keep Cystic Fibrosis Data
CFData = PseudomonasData[,c('CysticFibrosis')]
#remove Unwanted columns from the dataframe
PseudomonasData = subset(PseudomonasData,select=c('Mucoidy', 'Metallic', 'Hemolysis', 'Pigment', 'Amikacin', 'Cefepime', 'Ciprofloxacin', 'Gentamicin', 'Piperacillin/Tazobactam', 'Tobramycin', 'Meropenem'))
PseudomonasData = data.frame(PseudomonasData, stringsAsFactors = FALSE)
#create gower distance matrix
gower = gower.dist(PseudomonasData)
#perform PcoA using the ape package
x = pcoa(gower)
#plot PcoA
biplot(x, plot.axes = c(1,2), dir.axis1=1, dir.axis2=1, xlim[-0.25,0.8], ylim[-0.3, 0.6])
library(readr)
library(StatMatch)
library(ape)
PseudomonasData = read_csv("Desktop/Papin Rotation/PseudomonasData.csv")
#remove rows that have an isolation site that is not lung/trachea,
#urine/catheter, skin/wound
PseudomonasData = subset(PseudomonasData, IsolationSite!='Other')
PseudomonasData = subset(PseudomonasData, IsolationSite!='ENT/Sinus')
PseudomonasData = subset(PseudomonasData, IsolationSite!='Blood')
#Keep Isolation Data
IsolateData = PseudomonasData[,c('IsolationSite')]
#Keep Cystic Fibrosis Data
CFData = PseudomonasData[,c('CysticFibrosis')]
#remove Unwanted columns from the dataframe
PseudomonasData = subset(PseudomonasData,select=c('Mucoidy', 'Metallic', 'Hemolysis', 'Pigment', 'Amikacin', 'Cefepime', 'Ciprofloxacin', 'Gentamicin', 'Piperacillin/Tazobactam', 'Tobramycin', 'Meropenem'))
PseudomonasData = data.frame(PseudomonasData, stringsAsFactors = FALSE)
#create gower distance matrix
gower = gower.dist(PseudomonasData)
#perform PcoA using the ape package
x = pcoa(gower)
#plot PcoA
biplot(x, plot.axes = c(1,2), dir.axis1=1, dir.axis2=1, xlim= c(-0.25,0.8), ylim=c(-0.3, 0.6))
library(readr)
library(StatMatch)
library(ape)
PseudomonasData = read_csv("Desktop/Papin Rotation/PseudomonasData.csv")
#remove rows that have an isolation site that is not lung/trachea,
#urine/catheter, skin/wound
PseudomonasData = subset(PseudomonasData, IsolationSite!='Other')
PseudomonasData = subset(PseudomonasData, IsolationSite!='ENT/Sinus')
PseudomonasData = subset(PseudomonasData, IsolationSite!='Blood')
#Keep Isolation Data
IsolateData = PseudomonasData[,c('IsolationSite')]
#Keep Cystic Fibrosis Data
CFData = PseudomonasData[,c('CysticFibrosis')]
#remove Unwanted columns from the dataframe
PseudomonasData = subset(PseudomonasData,select=c('Mucoidy', 'Metallic', 'Hemolysis', 'Pigment', 'Amikacin', 'Cefepime', 'Ciprofloxacin', 'Gentamicin', 'Piperacillin/Tazobactam', 'Tobramycin', 'Meropenem'))
PseudomonasData = data.frame(PseudomonasData, stringsAsFactors = FALSE)
#create gower distance matrix
gower = gower.dist(PseudomonasData)
#perform PcoA using the ape package
x = pcoa(gower)
#plot PcoA
biplot(x, plot.axes = c(1,2), dir.axis1=1, dir.axis2=1, xlim= c(-0.25,0.8), ylim=c(-0.3, 0.6))
library(readr)
library(StatMatch)
library(ape)
PseudomonasData = read_csv("Desktop/Papin Rotation/PseudomonasData.csv")
#remove rows that have an isolation site that is not lung/trachea,
#urine/catheter, skin/wound
PseudomonasData = subset(PseudomonasData, IsolationSite!='Other')
PseudomonasData = subset(PseudomonasData, IsolationSite!='ENT/Sinus')
PseudomonasData = subset(PseudomonasData, IsolationSite!='Blood')
#Keep Isolation Data
IsolateData = PseudomonasData[,c('IsolationSite')]
#Keep Cystic Fibrosis Data
CFData = PseudomonasData[,c('CysticFibrosis')]
#remove Unwanted columns from the dataframe
PseudomonasData = subset(PseudomonasData,select=c('Mucoidy', 'Metallic', 'Hemolysis', 'Pigment', 'Amikacin', 'Cefepime', 'Ciprofloxacin', 'Gentamicin', 'Piperacillin/Tazobactam', 'Tobramycin', 'Meropenem'))
PseudomonasData = data.frame(PseudomonasData, stringsAsFactors = FALSE)
#create gower distance matrix
gower = gower.dist(PseudomonasData)
#perform PcoA using the ape package
x = pcoa(gower)
#plot PcoA
biplot(x, plot.axes = c(1,2), dir.axis1=1, dir.axis2=1, xlim= c(-0.25,0.8), ylim=c(-0.3, 0.6),expand = 10)
library(readr)
library(StatMatch)
library(ape)
PseudomonasData = read_csv("Desktop/Papin Rotation/PseudomonasData.csv")
#remove rows that have an isolation site that is not lung/trachea,
#urine/catheter, skin/wound
PseudomonasData = subset(PseudomonasData, IsolationSite!='Other')
PseudomonasData = subset(PseudomonasData, IsolationSite!='ENT/Sinus')
PseudomonasData = subset(PseudomonasData, IsolationSite!='Blood')
#Keep Isolation Data
IsolateData = PseudomonasData[,c('IsolationSite')]
#Keep Cystic Fibrosis Data
CFData = PseudomonasData[,c('CysticFibrosis')]
#remove Unwanted columns from the dataframe
PseudomonasData = subset(PseudomonasData,select=c('Mucoidy', 'Metallic', 'Hemolysis', 'Pigment', 'Amikacin', 'Cefepime', 'Ciprofloxacin', 'Gentamicin', 'Piperacillin/Tazobactam', 'Tobramycin', 'Meropenem'))
PseudomonasData = data.frame(PseudomonasData, stringsAsFactors = FALSE)
#create gower distance matrix
gower = gower.dist(PseudomonasData)
#perform PcoA using the ape package
x = pcoa(gower)
#plot PcoA
biplot(x, plot.axes = c(1,2), dir.axis1=1, dir.axis2=1, xlim= c(-0.25,0.8), ylim=c(-0.3, 0.6),expand = 10)
library(readr)
library(StatMatch)
library(ape)
PseudomonasData = read_csv("Desktop/Papin Rotation/PseudomonasData.csv")
#remove rows that have an isolation site that is not lung/trachea,
#urine/catheter, skin/wound
PseudomonasData = subset(PseudomonasData, IsolationSite!='Other')
PseudomonasData = subset(PseudomonasData, IsolationSite!='ENT/Sinus')
PseudomonasData = subset(PseudomonasData, IsolationSite!='Blood')
#Keep Isolation Data
IsolateData = PseudomonasData[,c('IsolationSite')]
#Keep Cystic Fibrosis Data
CFData = PseudomonasData[,c('CysticFibrosis')]
#remove Unwanted columns from the dataframe
PseudomonasData = subset(PseudomonasData,select=c('Mucoidy', 'Metallic', 'Hemolysis', 'Pigment', 'Amikacin', 'Cefepime', 'Ciprofloxacin', 'Gentamicin', 'Piperacillin/Tazobactam', 'Tobramycin', 'Meropenem'))
PseudomonasData = data.frame(PseudomonasData, stringsAsFactors = FALSE)
#create gower distance matrix
gower = gower.dist(PseudomonasData)
#perform PcoA using the ape package
x = pcoa(gower)
#plot PcoA
#plot = biplot(x, plot.axes = c(1,2), dir.axis1=1, dir.axis2=1, ,expand = 10, xlim= c(-0.25,0.8), ylim=c(-0.3, 0.6))
biplot(x,expand = 10, xlim= c(-0.25,0.8), ylim=c(-0.3, 0.6))
library(readr)
library(StatMatch)
library(ape)
PseudomonasData = read_csv("Desktop/Papin Rotation/PseudomonasData.csv")
#remove rows that have an isolation site that is not lung/trachea,
#urine/catheter, skin/wound
PseudomonasData = subset(PseudomonasData, IsolationSite!='Other')
PseudomonasData = subset(PseudomonasData, IsolationSite!='ENT/Sinus')
PseudomonasData = subset(PseudomonasData, IsolationSite!='Blood')
#Keep Isolation Data
IsolateData = PseudomonasData[,c('IsolationSite')]
#Keep Cystic Fibrosis Data
CFData = PseudomonasData[,c('CysticFibrosis')]
#remove Unwanted columns from the dataframe
PseudomonasData = subset(PseudomonasData,select=c('Mucoidy', 'Metallic', 'Hemolysis', 'Pigment', 'Amikacin', 'Cefepime', 'Ciprofloxacin', 'Gentamicin', 'Piperacillin/Tazobactam', 'Tobramycin', 'Meropenem'))
PseudomonasData = data.frame(PseudomonasData, stringsAsFactors = FALSE)
#create gower distance matrix
gower = gower.dist(PseudomonasData)
#perform PcoA using the ape package
x = pcoa(gower)
#plot PcoA
#plot = biplot(x, plot.axes = c(1,2), dir.axis1=1, dir.axis2=1, ,expand = 10, xlim= c(-0.25,0.8), ylim=c(-0.3, 0.6))
biplot(x,expand = 10, xlim= c(-0.25,0.8), ylim=c(-0.3, 0.6))
library(readr)
library(StatMatch)
library(ape)
PseudomonasData = read_csv("Desktop/Papin Rotation/PseudomonasData.csv")
#remove rows that have an isolation site that is not lung/trachea,
#urine/catheter, skin/wound
PseudomonasData = subset(PseudomonasData, IsolationSite!='Other')
PseudomonasData = subset(PseudomonasData, IsolationSite!='ENT/Sinus')
PseudomonasData = subset(PseudomonasData, IsolationSite!='Blood')
#Keep Isolation Data
IsolateData = PseudomonasData[,c('IsolationSite')]
#Keep Cystic Fibrosis Data
CFData = PseudomonasData[,c('CysticFibrosis')]
#remove Unwanted columns from the dataframe
PseudomonasData = subset(PseudomonasData,select=c('Mucoidy', 'Metallic', 'Hemolysis', 'Pigment', 'Amikacin', 'Cefepime', 'Ciprofloxacin', 'Gentamicin', 'Piperacillin/Tazobactam', 'Tobramycin', 'Meropenem'))
PseudomonasData = data.frame(PseudomonasData, stringsAsFactors = FALSE)
#create gower distance matrix
gower = gower.dist(PseudomonasData)
#perform PcoA using the ape package
x <- pcoa(gower)
#plot PcoA
#plot = biplot(x, plot.axes = c(1,2), dir.axis1=1, dir.axis2=1, ,expand = 10, xlim= c(-0.25,0.8), ylim=c(-0.3, 0.6))
biplot(x,expand = 10, xlim= c(-0.25,0.8), ylim=c(-0.3, 0.6))
library(readr)
library(StatMatch)
library(ape)
PseudomonasData = read_csv("Desktop/Papin Rotation/PseudomonasData.csv")
#remove rows that have an isolation site that is not lung/trachea,
#urine/catheter, skin/wound
PseudomonasData = subset(PseudomonasData, IsolationSite!='Other')
PseudomonasData = subset(PseudomonasData, IsolationSite!='ENT/Sinus')
PseudomonasData = subset(PseudomonasData, IsolationSite!='Blood')
#Keep Isolation Data
IsolateData = PseudomonasData[,c('IsolationSite')]
#Keep Cystic Fibrosis Data
CFData = PseudomonasData[,c('CysticFibrosis')]
#remove Unwanted columns from the dataframe
PseudomonasData = subset(PseudomonasData,select=c('Mucoidy', 'Metallic', 'Hemolysis', 'Pigment', 'Amikacin', 'Cefepime', 'Ciprofloxacin', 'Gentamicin', 'Piperacillin/Tazobactam', 'Tobramycin', 'Meropenem'))
PseudomonasData = data.frame(PseudomonasData, stringsAsFactors = FALSE)
#create gower distance matrix
gower = gower.dist(PseudomonasData)
#perform PcoA using the ape package
x <- pcoa(gower)
#plot PcoA
biplot(x, plot.axes = c(1,2), dir.axis1=1, dir.axis2=1, ,expand = 10, xlim= c(-0.25,0.8), ylim=c(-0.3, 0.6))
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ggtree")
library(vegan)
library(ggplot2)
strain_287 <- read.csv("Desktop/Spring 2022/BME 6311/Project/287.csv")
strain_1407059 <- read.csv("Desktop/Spring 2022/BME 6311/Project/1407059.csv")
strain_1089456 <- read.csv("Desktop/Spring 2022/BME 6311/Project/1089456.csv")
strain_1427342 <- read.csv("Desktop/Spring 2022/BME 6311/Project/1427342.csv")
strain_1437873 <- read.csv("Desktop/Spring 2022/BME 6311/Project/1437873.csv")
strain_381754 <- read.csv("Desktop/Spring 2022/BME 6311/Project/381754.csv")
strain_910265 <- read.csv("Desktop/Spring 2022/BME 6311/Project/910265.csv")
strain_1340851 <- read.csv("Desktop/Spring 2022/BME 6311/Project/1340851.csv")
strain_208963 <- read.csv("Desktop/Spring 2022/BME 6311/Project/208963.csv")
strain_1280938 <- read.csv("Desktop/Spring 2022/BME 6311/Project/1280938.csv")
L <- list(strain_287, strain_1407059, strain_1089456, strain_1427342, strain_1437873, strain_381754, strain_910265, strain_1340851, strain_208963, strain_1280938)
common_cols <- Reduce(intersect, lapply(L, names))
#determine consensus reactions
#L <- list(abtgc_data, glycan_data, muc5ac_data, muc5b_data)
#common_cols <- Reduce(intersect, lapply(L, names))
strain_287 <- strain_287[common_cols]
strain_1407059 <- strain_1407059[common_cols]
strain_1089456 <- strain_1089456[common_cols]
strain_1427342 <- strain_1427342[common_cols]
strain_1437873 <- strain_1437873[common_cols]
strain_381754 <- strain_381754[common_cols]
strain_910265 <- strain_910265[common_cols]
strain_1340851 <- strain_1340851[common_cols]
strain_208963 <- strain_208963[common_cols]
strain_1280938 <- strain_1280938[common_cols]
#create concatenated data frame
data <- rbind(strain_287, strain_1407059, strain_1089456, strain_1427342, strain_1437873, strain_381754, strain_910265, strain_1340851, strain_208963, strain_1280938)
#extract strain data
strain <- data[c("strain")]
#remove mucin column
drop <-c("strain")
data = data[,!(names(data)%in%drop)]
#determine minimum value of flux in dataframe
min_flux <- min(data)
data <- data+-1*min_flux
################### Preform MDS ###################
sol <- metaMDS(data, try = 1, trymax = 1)
print(sol)
points <- sol[["points"]]
points<-data.frame(points)
points<-cbind(strain, points)
ggplot(points, aes(x=MDS1, y=MDS2, color=strain)) +geom_point(size = 2)
model2_centroids <- aggregate(cbind(NMDS1,NMDS2) ~ model, data = data.scores, mean)
model2_centroids <- aggregate(cbind(NMDS1,NMDS2) ~ model, data, mean)
model2_centroids <- aggregate(cbind(MDS1,MDS2) ~ model, data, mean)
model2_centroids <- aggregate(cbind(MDS1,MDS2) ~ model, data, mean)
install.packages("BiocManager")
BiocManager::install(version = '3.12')
library("tidyverse")
install.packages("tidyverse")
library("tidyverse")
library("tidyverse")
install.packages("BiocManager")
BiocManager::install(version = '3.12')
install.packages("BiocManager")
BiocManager::install(version = '3.15')
install.packages("BiocManager")
BiocManager::install(version = '3.15')
BiocManager::install(c("dada2","phyloseq","Biostrings","mixOmics","tidyverse","randomForest","ape","pROC","readxl","ggpubr","vegan"))
library("tidyverse")
library("ggpubr")
library("dada2")
install.packages('GenomicAlignments')
library("dada2")
BiocManager::install(c("dada2"))
library("dada2")
BiocManager::install(c("GenomicAlignments"))
library("dada2")
library("phyloseq")
library("biostrings")
library("Biostrings")
library("mixOmics")
libary("randomForest")
library("randomForest")
library("ape")
library("vegan")
library("pROC")
library("readxl")
Create Project
help TreeDist
TreeDisst::MapTrees()
TreeDist::MapTrees()
install.packages(Quartet)
install.packages('Quartet')
install.packages("Quartet")
QuartetDistance(~/Downloads/nextstrain_ncov_gisaid_global_6m_timetree.nwk, ~/Downloads/nextstrain_ncov_gisaid_north-america_6m_timetree.nwk)
QuartetDistance(nextstrain_ncov_gisaid_global_6m_timetree.nwk,nextstrain_ncov_gisaid_north-america_6m_timetree.nwk)
library('Quartet')
QuartetDistance(nextstrain_ncov_gisaid_global_6m_timetree.nwk,nextstrain_ncov_gisaid_north-america_6m_timetree.nwk)
pwd
getwd()
cd Downloads
cd(Downloads)
setwd("~/Downloads")
QuartetDistance(nextstrain_ncov_gisaid_global_6m_timetree.nwk,nextstrain_ncov_gisaid_north-america_6m_timetree.nwk)
getwd()
install.packages('tqDist')
getwd()
setwd("~/Desktop/PhD/TrainingGrants/SBDS_TG/MadhavRotation/trees")
QuartetDistance(nextstrain_ncov_gisaid_global_6m_timetree.nwk,nextstrain_ncov_gisaid_north-america_6m_timetree.nwk)
getwd()
QuartetDistance('global.nwk', 'northamerica.nwk')
library("TreeDist")
TreeDistance("global.nwk", "northamerica.nwk")
library("Quartet")
RobinsonFoulds("global.nwk", "northamerica.nwk")
getwd()
library("Quartet")
QuartetStatus("global.nwk", "northamerica.nwk")
SplitStatus("global.nwk", "northamerica.nwk")
Quartet("global.nwk", "northamerica.nwk")
QuartetDistance("global.nwk", "northamerica.nwk")
